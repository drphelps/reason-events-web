// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Lodash = require("lodash");
var Js_json = require("bs-platform/lib/js/js_json.js");
var Js_option = require("bs-platform/lib/js/js_option.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var ToSnakeCase = require("to-snake-case");
var Option$BsAbstract = require("bs-abstract/src/implementations/Option.bs.js");

function $$parseInt$1(string) {
  return parseInt(string, 10);
}

function displayIf(option, render) {
  if (option) {
    return Curry._1(render, option[0]);
  } else {
    return null;
  }
}

function displayIfBool(bool, render) {
  if (bool) {
    return Curry._1(render, /* () */0);
  } else {
    return null;
  }
}

function get(path, obj) {
  return Js_primitive.null_undefined_to_opt(Lodash.get(obj, path));
}

var Obj = /* module */[/* get */get];

function snakecaseKeys(obj) {
  return Lodash.mapKeys(obj, (function (_, key) {
                return ToSnakeCase(key);
              }));
}

function decodeDate(date) {
  return Curry._2(Option$BsAbstract.Infix[/* <#> */4], Js_json.decodeString(date), (function (prim) {
                return new Date(prim);
              }));
}

function encodeDate(date) {
  return date.toString();
}

var getWithDefault = Js_option.getWithDefault;

var $less$unknown$great = displayIf;

exports.getWithDefault = getWithDefault;
exports.$$parseInt = $$parseInt$1;
exports.displayIf = displayIf;
exports.displayIfBool = displayIfBool;
exports.$less$unknown$great = $less$unknown$great;
exports.Obj = Obj;
exports.snakecaseKeys = snakecaseKeys;
exports.decodeDate = decodeDate;
exports.encodeDate = encodeDate;
/* lodash Not a pure module */
